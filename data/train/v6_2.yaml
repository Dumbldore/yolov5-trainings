# COCO 2017 dataset http://cocodataset.org
# Train command: python train.py --data coco.yaml
# Default dataset location is next to /yolov5:
#   /parent_folder
#     /coco
#     /yolov5


# download command/URL (optional)
#download: bash data/scripts/get_coco.sh
# train and val data as 1) directory: path/images/, 2) file: path/images.txt, or 3) list: [path1/images/, path2/images/]
train: [ /home/oke/datasets/new_yolo_dataset/images/Reda_dataset/val,
         /home/oke/datasets/new_yolo_dataset/images/Reda_dataset/train,
         /home/oke/datasets/new_yolo_dataset/images/Egmond/train,
         /home/oke/datasets/new_yolo_dataset/images/Egmond/val,
         /home/oke/datasets/new_yolo_dataset/images/Gram_M-30/train,
         /home/oke/datasets/new_yolo_dataset/images/Gram_M-30/val,
         /home/oke/datasets/new_yolo_dataset/images/Ivanec/train,
         /home/oke/datasets/new_yolo_dataset/images/Ivanec/val,
         /home/oke/datasets/new_yolo_dataset/images/Ivanec_1/train,
         /home/oke/datasets/new_yolo_dataset/images/Ivanec_1/val,
         /home/oke/datasets/new_yolo_dataset/images/Jablonowo/train,
         /home/oke/datasets/new_yolo_dataset/images/Jablonowo/val,
         /home/oke/datasets/new_yolo_dataset/images/Jackson_Town_Square/train,
         /home/oke/datasets/new_yolo_dataset/images/Jackson_Town_Square/val,
         /home/oke/datasets/new_yolo_dataset/images/M-30-HD/train,
         /home/oke/datasets/new_yolo_dataset/images/M-30-HD/val,
         /home/oke/datasets/new_yolo_dataset/images/Traffic_Monitoring_4K/train,
         /home/oke/datasets/new_yolo_dataset/images/Traffic_Monitoring_4K/val,
         /home/oke/datasets/new_yolo_dataset/images/empty_roads/train,
         /home/oke/datasets/new_yolo_dataset/images/empty_roads/val,
         /home/oke/datasets/new_yolo_dataset/images/MOT2015/train,
         /home/oke/datasets/new_yolo_dataset/images/MOT2015/val,
         /home/oke/datasets/new_yolo_dataset/images/wilkowyje/train,
         /home/oke/datasets/new_yolo_dataset/images/wilkowyje/val,
         /home/oke/datasets/new_yolo_dataset/images/Trafficcircle_derry_day/train,
         /home/oke/datasets/new_yolo_dataset/images/Trafficcircle_derry_day/val,
         /home/oke/datasets/new_yolo_dataset/images/TownCentre/train,
         /home/oke/datasets/new_yolo_dataset/images/TownCentre/val,
         /home/oke/datasets/coco/images/train2017,
         /home/oke/datasets/coco/images/val2017,
]

val: [
        /home/oke/datasets/new_yolo_dataset/images/starogard_selected/val/,
        /home/oke/datasets/new_yolo_dataset/images/Odessa/val,
        /home/oke/datasets/new_yolo_dataset/images/Odessa/train,
        /home/oke/datasets/new_yolo_dataset/images/Odessa_1/val,
        /home/oke/datasets/new_yolo_dataset/images/Odessa_1/train,
        /home/oke/datasets/new_yolo_dataset/images/reda1/val/,
        /home/oke/datasets/new_yolo_dataset/images/reda1/train,
        /home/oke/datasets/new_yolo_dataset/images/starogard_selected/train/,
        /home/oke/datasets/new_yolo_dataset/images/starogard_selected/val/
]

test: [ ]

# number of classes
nc: 80

# class names
names: [ 'person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light',
         'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep', 'cow',
         'elephant', 'bear', 'zebra', 'giraffe', 'backpack', 'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee',
         'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard',
         'tennis racket', 'bottle', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple',
         'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair', 'couch',
         'potted plant', 'bed', 'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone',
         'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors', 'teddy bear',
         'hair drier', 'toothbrush' ]

# Print classes
# with open('data/coco.yaml') as f:
#   d = yaml.load(f, Loader=yaml.FullLoader)  # dict
#   for i, x in enumerate(d['names']):
#     print(i, x)

